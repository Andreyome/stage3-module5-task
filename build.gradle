plugins {
    id 'java-base'
    id "org.sonarqube" version "5.0.0.4638"
    id 'jacoco'
}
jacoco {
    toolVersion = "0.8.8"
}
wrapper {
    gradleVersion = gradlewVersion
}
sonar {
    properties {
        property "sonar.projectKey", "App-test"
        property "sonar.projectName", "App test"
        property "sonar.token", "squ_1a848c723a38d96aa0f04673d0851d7f2990f2fe"
        property "sonar.java.binaries", "**/build/classes"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    group = 'com.mjc.school'

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.postgresql:postgresql:42.5.1'
        implementation "org.springframework:spring-context:$springVersion"
        implementation 'org.springframework.boot:spring-boot-starter-web:2.7.7'
        implementation "org.springframework.boot:spring-boot-starter-data-jpa:2.7.7"
        implementation 'com.h2database:h2:2.1.214'
        implementation 'javax.xml.bind:jaxb-api:2.3.1'
        annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
        implementation "org.mapstruct:mapstruct:$mapstructVersion"
        implementation 'org.springframework.boot:spring-boot-starter-hateoas:2.7.7'

        testImplementation "org.springframework:spring-test:$springVersion"
        testImplementation "com.tngtech.archunit:archunit-junit5:1.0.0"
        testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiterVersion"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jupiterVersion"
        testImplementation "com.tngtech.archunit:archunit:$archUnitVersion"
        testImplementation "com.tngtech.archunit:archunit-junit5:1.0.0"
        testImplementation 'org.assertj:assertj-core:3.19.0'
        testImplementation 'io.rest-assured:rest-assured:5.4.0'
        testImplementation 'org.hamcrest:hamcrest:2.2'
        testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.7'
        testImplementation 'com.h2database:h2'

        runtimeOnly 'com.h2database:h2'

    }
    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
    }
    jacocoTestReport {
        dependsOn test

        reports {
            xml.required = true
            csv.required = false
            html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
        }
    }
    jacocoTestCoverageVerification {
        violationRules {
            rule {
                element = 'CLASS'
                limit {
                    counter = 'INSTRUCTION'
                    value = 'COVEREDRATIO'
                    minimum = 0.80
                }
            }
        }
    }
}
//Test Purpose